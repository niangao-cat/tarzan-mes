<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ruike.hme.infra.mapper.HmeLoadJobObjectMapper">
	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap id="BaseResultMap" type="com.ruike.hme.domain.entity.HmeLoadJobObject">
        <result column="LOAD_OBJECT_ID" property="loadObjectId" jdbcType="VARCHAR"/>
        <result column="LOAD_JOB_ID" property="loadJobId" jdbcType="VARCHAR"/>
        <result column="OBJECT_TYPE" property="objectType" jdbcType="VARCHAR"/>
        <result column="OBJECT_ID" property="objectId" jdbcType="VARCHAR"/>
        <result column="TENANT_ID" property="tenantId" jdbcType="DECIMAL"/>
        <result column="CID" property="cid" jdbcType="DECIMAL"/>
        <result column="OBJECT_VERSION_NUMBER" property="objectVersionNumber" jdbcType="DECIMAL"/>
        <result column="CREATION_DATE" property="creationDate" jdbcType="DATE"/>
        <result column="CREATED_BY" property="createdBy" jdbcType="DECIMAL"/>
        <result column="LAST_UPDATED_BY" property="lastUpdatedBy" jdbcType="DECIMAL"/>
        <result column="LAST_UPDATE_DATE" property="lastUpdateDate" jdbcType="DATE"/>
        <result column="ATTRIBUTE_CATEGORY" property="attributeCategory" jdbcType="VARCHAR"/>
        <result column="ATTRIBUTE1" property="attribute1" jdbcType="VARCHAR"/>
        <result column="ATTRIBUTE2" property="attribute2" jdbcType="VARCHAR"/>
        <result column="ATTRIBUTE3" property="attribute3" jdbcType="VARCHAR"/>
        <result column="ATTRIBUTE4" property="attribute4" jdbcType="VARCHAR"/>
        <result column="ATTRIBUTE5" property="attribute5" jdbcType="VARCHAR"/>
        <result column="ATTRIBUTE6" property="attribute6" jdbcType="VARCHAR"/>
        <result column="ATTRIBUTE7" property="attribute7" jdbcType="VARCHAR"/>
        <result column="ATTRIBUTE8" property="attribute8" jdbcType="VARCHAR"/>
        <result column="ATTRIBUTE9" property="attribute9" jdbcType="VARCHAR"/>
        <result column="ATTRIBUTE10" property="attribute10" jdbcType="VARCHAR"/>
        <result column="ATTRIBUTE11" property="attribute11" jdbcType="VARCHAR"/>
        <result column="ATTRIBUTE12" property="attribute12" jdbcType="VARCHAR"/>
        <result column="ATTRIBUTE13" property="attribute13" jdbcType="VARCHAR"/>
        <result column="ATTRIBUTE14" property="attribute14" jdbcType="VARCHAR"/>
        <result column="ATTRIBUTE15" property="attribute15" jdbcType="VARCHAR"/>
    </resultMap>

    <insert id="batchInsert" parameterType="com.ruike.hme.domain.entity.HmeLoadJobObject">
        insert into hme_load_job_object
        (
        tenant_id,
        load_object_id,
        load_job_id,
        object_type,
        object_id,
        cid,
        object_version_number,
        creation_date,
        created_by,
        last_updated_by,
        last_update_date,
        attribute1,
        attribute2,
        attribute3,
        attribute4,
        attribute5,
        attribute6,
        attribute7,
        attribute8,
        attribute9,
        attribute10,
        attribute11,
        attribute12,
        attribute13,
        attribute14,
        attribute15
        )
        values
        <foreach collection="domains" index="index" item="item" separator=",">
            (
            #{item.tenantId},
            #{item.loadObjectId},
            #{item.loadJobId},
            #{item.objectType},
            #{item.objectId},
            #{item.cid},
            #{item.objectVersionNumber},
            #{item.creationDate},
            #{item.createdBy},
            #{item.lastUpdatedBy},
            #{item.lastUpdateDate},
            #{item.attribute1},
            #{item.attribute2},
            #{item.attribute3},
            #{item.attribute4},
            #{item.attribute5},
            #{item.attribute6},
            #{item.attribute7},
            #{item.attribute8},
            #{item.attribute9},
            #{item.attribute10},
            #{item.attribute11},
            #{item.attribute12},
            #{item.attribute13},
            #{item.attribute14},
            #{item.attribute15}
            )
        </foreach>
    </insert>
</mapper>