<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ruike.hme.infra.mapper.HmeOperationAssignMapper">
	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap id="BaseResultMap" type="com.ruike.hme.domain.entity.HmeOperationAssign">
        <result column="TENANT_ID" property="tenantId" jdbcType="DECIMAL"/>
        <result column="OPERATION_ASSIGN_ID" property="operationAssignId" jdbcType="VARCHAR"/>
        <result column="OPERATION_ID" property="operationId" jdbcType="VARCHAR"/>
        <result column="QUALITY_ID" property="qualityId" jdbcType="VARCHAR"/>
        <result column="ENABLE_FLAG" property="enableFlag" jdbcType="VARCHAR"/>
        <result column="CID" property="cid" jdbcType="DECIMAL"/>
        <result column="OBJECT_VERSION_NUMBER" property="objectVersionNumber" jdbcType="DECIMAL"/>
        <result column="CREATION_DATE" property="creationDate" jdbcType="DATE"/>
        <result column="CREATED_BY" property="createdBy" jdbcType="DECIMAL"/>
        <result column="LAST_UPDATED_BY" property="lastUpdatedBy" jdbcType="DECIMAL"/>
        <result column="LAST_UPDATE_DATE" property="lastUpdateDate" jdbcType="DATE"/>
        <result column="ATTRIBUTE_CATEGORY" property="attributeCategory" jdbcType="VARCHAR"/>
        <result column="ATTRIBUTE1" property="attribute1" jdbcType="VARCHAR"/>
        <result column="ATTRIBUTE2" property="attribute2" jdbcType="VARCHAR"/>
        <result column="ATTRIBUTE3" property="attribute3" jdbcType="VARCHAR"/>
        <result column="ATTRIBUTE4" property="attribute4" jdbcType="VARCHAR"/>
        <result column="ATTRIBUTE5" property="attribute5" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="queryLov" resultType="com.ruike.hme.api.dto.HmeQualificationDTO2">
        SELECT
            hq.quality_id, hq.quality_code, hq.quality_name, hq.quality_type, hq.remark
        FROM
            hme_qualification hq
        WHERE
            hq.enable_flag = 'Y'
            AND hq.TENANT_ID = #{tenantId}
        <if test="dto.qualityType != null and dto.qualityType != ''">
            AND hq.quality_type = #{dto.qualityType}
        </if>
        <if test="dto.qualityCode != null and dto.qualityCode != ''">
            AND hq.quality_code like CONCAT('%',CONCAT(#{dto.qualityCode},'%'))
        </if>
        <if test="dto.qualityName != null and dto.qualityName != ''">
            AND hq.quality_name like CONCAT('%',CONCAT(#{dto.qualityName},'%'))
        </if>
        <if test="dto.remark != null and dto.remark != ''">
            AND hq.remark like CONCAT('%',CONCAT(#{dto.remark},'%'))
        </if>
        <if test="qualityTypeList != null and qualityTypeList.size > 0">
            AND hq.quality_type in
            <foreach collection="qualityTypeList" separator="," open="(" close=")" item="i" index="index">
                #{i}
            </foreach>
        </if>
        AND NOT EXISTS (
            SELECT
                *
            FROM
                hme_operation_assign hoa
            WHERE
                hoa.operation_id = #{dto.operationId}
            AND hoa.quality_id = hq.quality_id
        )
    </select>

    <select id="queryData" resultType="com.ruike.hme.domain.entity.HmeOperationAssign">
        select hoa.*
        from hme_operation_assign hoa
        left join hme_qualification hq
        on hoa.quality_id = hq.quality_id
        WHERE hoa.enable_flag = 'Y'
        and hoa.operation_id = #{operationId}
        and hoa.tenant_id = #{tenantId}
        and hq.enable_flag = 'Y'
    </select>

    <select id="batchQueryData" resultType="com.ruike.hme.domain.entity.HmeQualification">
        select distinct
                hq.quality_id,
               hq.quality_code,
               hq.quality_name
        from hme_operation_assign hoa
                 left join hme_qualification hq
                           on hoa.quality_id = hq.quality_id
        WHERE hoa.enable_flag = 'Y'
          and hoa.tenant_id = #{tenantId}
          and hq.enable_flag = 'Y'
          and hoa.operation_id in
          <foreach collection="operationIdList" index="index" item="item" separator="," open="(" close=")">
              #{item}
          </foreach>
    </select>
</mapper>